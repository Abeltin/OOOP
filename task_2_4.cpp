/*Абельтин С.А. 41ИС-21
2.4. Зачем нужна защита
Задача: Показать пример класса с приватными данными, чтобы предотвратить прямой доступ к ним.*/

#include <iostream>
class SafeData {
private:
    int secret; // Приватное поле, доступ к которому запрещен напрямую
public:
    SafeData(int value) : secret(value) {} // Инициализация значения
    int getSecret() { return secret; } // Метод для получения значения
};

int main() {
    SafeData obj(42);
    // obj.secret = 100; // Ошибка: доступ к private переменной невозможен
    std::cout << "Секрет: " << obj.getSecret() << std::endl; // Доступ через метод
    return 0;
}

/*Защита данных означает, что к ним нельзя получить доступ напрямую и случайно изменить их, что может привести к ошибкам.
Приватные данные можно изменить или прочитать только через методы, которые контролируют, что можно и что нельзя делать.*/
